\name{sominit.pca.dist}
\alias{sominit.pca.dist}
\title{Initialise the prototypes of a dissimilarity SOM with classical
  MDS}
\description{
Initialise the prototypes of a dissimilarity Self-Organising Map with a
classical multidimensional scaling. The prototypes are regulary
positioned (according to the prior structure) in the two dimensional
space representation of the data according to a classical MDS. If the
dissimilarity matrix contains squared Euclidean distances between vector
data, then this method is equivalent to
\code{\link{sominit.pca.default}}.
}
\usage{
\method{sominit.pca}{dist}(data, somgrid, nbsupport=3, type=c("closest","random"), \dots)
}
\arguments{
  \item{data}{the data to which the SOM will be fitted, i.e., a
    distance matrix}
  \item{somgrid}{a \code{somgrid} object}
  \item{nbsupport}{the number of support points for the barycentric
    representation of the initial values of the prototypes (default to 3)}
  \item{type}{the type of supports points (default to "closest", see details)}
  \item{\dots}{not used}
}
\details{
  The method first calls \code{\link{cmdscale}} to conduct a classical
  multidimensional scaling on the data. It generates a regular grid in
  the two dimensional representation space generated by the MDS. Then,
  each node of this grid (i.e., each prototype) is given a barycentric
  expression: each node is expressed as a linear combination of the
  representation of \code{nbsupport} of the data points obtained via
  MDS, such that the sum of the linear coefficient is one. The
  corresponding support points are chosen either as the closest ones to
  the node to represent in the representation space or randomly, as
  specified by the \code{type} parameter. 
}
\value{
  A matrix containing appropriate initial prototypes
}
\author{Fabrice Rossi}
\seealso{\code{\link{sominit.random}} and \code{\link{somgrid}}}
\examples{
X <- cbind(rnorm(500),rnorm(500))

sg <- somgrid(xdim=7,ydim=7,topo="rect")

proto <- sominit.pca(dist(X),sg)

plot(X,pch="+",col="red",xlim=range(X[,1],proto[,1]),
     ylim=range(X[,2],proto[,2]))
points(proto\%*\%X,pch=20)

}
\keyword{cluster}

